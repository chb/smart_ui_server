C({"name": "steal.prototype.init", "shortName": "Function", "ret": {"description": "a new steal object\n     ", "type": "steal"}, "params": {"options": {"description": "\n <table class='options'>\n     <tr>\n         <th>Type</th><th>Description</th>\n     </tr>\n     <tr><td>String</td><td>A relative path to a JavaScript file.  The path can optionally end in '.js'</td></tr>\n     <tr><td>Object</td>\n     <td>An Object with the following properties:\n         <ul>\n             <li>path {String} - relative path to a JavaScript file.  </li>\n             <li>type {optional:String} - Script type (defaults to text/javascript)</li>\n             <li>skipInsert {optional:Boolean} - Include not added as script tag</li>\n             <li>compress {optional:String} - \"false\" if you don't want to compress script</li>\n             <li>package {optional:String} - Script package name (defaults to production.js)</li>             \n         </ul>\n     </td></tr>\n     <tr><td>Function</td><td>A function to run after all the prior steals have finished loading</td></tr>\n </table>", "type": "String|Object|Function", "optional": false, "order": 0, "name": "options"}}, "comment": "Queues a file to be loaded or an steal callback to be run.  This takes the same arguments as [steal].\n"})